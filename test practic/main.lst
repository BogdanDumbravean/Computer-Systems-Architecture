     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit, scanf, printf
     6                                  
     7                                  import exit msvcrt.dll
     8                                  import scanf msvcrt.dll
     9                                  import printf msvcrt.dll
    10                                  
    11                                  segment data use32 class=data
    12 00000000 00<rept>                    cuvant times 32 db 0
    13 00000020 00<rept>                    cuvant_nou times 32 db 0
    14 00000040 00000000                    n dd 0
    15 00000044 257300                      format_string db '%s', 0
    16 00000047 256400                      format_dec db '%d', 0
    17 0000004A 6165696F754145494F-         vocale db "aeiouAEIOU", 0
    17 00000053 5500               
    18                                  
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; citeste cuvant
    22 00000000 68[00000000]                    push dword cuvant
    23 00000005 68[44000000]                    push dword format_string
    24 0000000A FF15[00000000]                  call [scanf]
    25 00000010 83C408                          add esp, 4*2
    26                                          ;citeste numar
    27 00000013 68[40000000]                    push dword n
    28 00000018 68[47000000]                    push dword format_dec
    29 0000001D FF15[00000000]                  call [scanf]
    30 00000023 83C408                          add esp, 4*2
    31                                          
    32 00000026 B801000000                      mov eax, 1
    33 0000002B 2305[40000000]                  and eax, [n]
    34 00000031 7A30                            jp par
    35                                          
    36                                          ; impar
    37 00000033 BE[00000000]                    mov esi, cuvant
    38 00000038 BF[20000000]                    mov edi, cuvant_nou
    39                                          criptare:
    40                                              ; ia o litera
    41 0000003D AC                                  lodsb
    42                                              
    43                                              ; s-a terminat cuvantul
    44 0000003E 3C00                                cmp al, 0
    45 00000040 7435                                je afisare
    46                                              
    47                                              ; verifica daca vocala
    48 00000042 B90A000000                          mov ecx, 10
    49                                              vocala:
    50 00000047 BB[4A000000]                            mov ebx, vocale
    51 0000004C 01CB                                    add ebx, ecx
    52 0000004E 4B                                      dec ebx
    53                                                  
    54 0000004F 3A03                                    cmp al, [ebx]
    55 00000051 7405                                    je addp
    56 00000053 E2F2                                    loop vocala
    57                                                  
    58 00000055 AA                                  stosb
    59                                              ; daca nu a fost vocala, mergi mai departe
    60 00000056 EBE5                                jmp criptare
    61                                              addp:
    62 00000058 AA                                  stosb
    63 00000059 88C3                                mov bl, al
    64 0000005B B070                                mov al, 'p'
    65 0000005D AA                                  stosb 
    66 0000005E 88D8                                mov al, bl
    67 00000060 AA                                  stosb 
    68 00000061 EBDA                                jmp criptare
    69                                              
    70                                          ; criptare par    
    71                                          par:
    72 00000063 BE[00000000]                    mov esi, cuvant
    73 00000068 BF[20000000]                    mov edi, cuvant_nou
    74                                          criptare2:
    75 0000006D AC                                  lodsb
    76                                              
    77                                              ; s-a terminat cuvantul
    78 0000006E 3C00                                cmp al, 0
    79 00000070 7405                                je afisare
    80                                              
    81 00000072 0414                                add al, 20
    82 00000074 AA                                  stosb
    83 00000075 EBF6                                jmp criptare2
    84                                          
    85                                          afisare:
    86                                          ; afiseaza
    87 00000077 68[20000000]                    push dword cuvant_nou
    88 0000007C 68[44000000]                    push dword format_string
    89 00000081 FF15[00000000]                  call [printf]
    90 00000087 83C408                          add esp, 4*2
    91                                          
    92 0000008A 6A00                            push dword 0
    93 0000008C FF15[00000000]                  call [exit]
